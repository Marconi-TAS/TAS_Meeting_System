{"ast":null,"code":"var _jsxFileName = \"/home/nick/dev/TAS_Meeting_System/frontend/src/components/MainLayout.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport SideBar from './sidebar/SideBar';\nimport DesignContainer from './design_pane/DesignContainer';\nimport { Stack } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MainLayout = () => {\n  _s();\n  const [color, setColor] = useState('blue');\n  const handleColorChange = () => {\n    setColor(color === 'blue' ? 'red' : 'blue');\n  };\n  const handleSlideClick = async slide => {\n    console.log('Double clicked slide: ', slide);\n    try {\n      let baseSlidePath = '/api/slide-info/';\n      let fullSlidePath = baseSlidePath.concat(slide);\n      const response = await fetch(fullSlidePath);\n      if (!response.ok) {\n        throw new Error('Failed to get slide info');\n      }\n      const data = await response.json();\n      /**\n      setSlideHeader(data.slideHeader);\n      setSlideBody(data.slideBody);\n      setSlideDocuments(data.slideDocuments);\n       */\n      setSlideDataList([data.slideDataList]);\n    } catch (error) {\n      console.error('Error fetching slide info: ', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Stack, {\n    spacing: 4,\n    direction: \"row\",\n    style: {\n      alignItems: 'center',\n      marginTop: '8px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(SideBar, {\n      onClick: handleColorChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(DesignContainer, {\n      color: color\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n};\n_s(MainLayout, \"1nHDiXj5DbCdZ70vxuIyMw9nFnk=\");\n_c = MainLayout;\nexport default MainLayout;\nvar _c;\n$RefreshReg$(_c, \"MainLayout\");","map":{"version":3,"names":["React","useState","SideBar","DesignContainer","Stack","jsxDEV","_jsxDEV","MainLayout","_s","color","setColor","handleColorChange","handleSlideClick","slide","console","log","baseSlidePath","fullSlidePath","concat","response","fetch","ok","Error","data","json","setSlideDataList","slideDataList","error","spacing","direction","style","alignItems","marginTop","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/nick/dev/TAS_Meeting_System/frontend/src/components/MainLayout.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport SideBar from './sidebar/SideBar';\nimport DesignContainer from './design_pane/DesignContainer';\nimport { Stack } from \"@mui/material\";\n\nconst MainLayout = () => {\n    const [color, setColor] = useState('blue');\n\n    const handleColorChange = () => {\n        setColor(color === 'blue' ? 'red' : 'blue');\n    };\n\n    const handleSlideClick = async (slide) => {\n        console.log('Double clicked slide: ', slide);\n        try {\n          let baseSlidePath = '/api/slide-info/';\n          let fullSlidePath = baseSlidePath.concat(slide);\n          const response = await fetch(fullSlidePath);\n          if (!response.ok) {\n            throw new Error('Failed to get slide info');\n          }\n          const data = await response.json();\n          /**\n          setSlideHeader(data.slideHeader);\n          setSlideBody(data.slideBody);\n          setSlideDocuments(data.slideDocuments);\n           */\n          setSlideDataList([data.slideDataList]);\n        } catch (error) {\n          console.error('Error fetching slide info: ', error);\n        }\n      };\n\n    return (\n        <Stack spacing={4} direction=\"row\" style={{alignItems: 'center', marginTop: '8px' }}>\n          <SideBar onClick={handleColorChange} />\n          <DesignContainer color={color} />\n        </Stack>\n    );\n};\n\nexport default MainLayout;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,OAAO,MAAM,mBAAmB;AACvC,OAAOC,eAAe,MAAM,+BAA+B;AAC3D,SAASC,KAAK,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,MAAM,CAAC;EAE1C,MAAMU,iBAAiB,GAAGA,CAAA,KAAM;IAC5BD,QAAQ,CAACD,KAAK,KAAK,MAAM,GAAG,KAAK,GAAG,MAAM,CAAC;EAC/C,CAAC;EAED,MAAMG,gBAAgB,GAAG,MAAOC,KAAK,IAAK;IACtCC,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAEF,KAAK,CAAC;IAC5C,IAAI;MACF,IAAIG,aAAa,GAAG,kBAAkB;MACtC,IAAIC,aAAa,GAAGD,aAAa,CAACE,MAAM,CAACL,KAAK,CAAC;MAC/C,MAAMM,QAAQ,GAAG,MAAMC,KAAK,CAACH,aAAa,CAAC;MAC3C,IAAI,CAACE,QAAQ,CAACE,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,0BAA0B,CAAC;MAC7C;MACA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;MAClC;AACV;AACA;AACA;AACA;MACUC,gBAAgB,CAAC,CAACF,IAAI,CAACG,aAAa,CAAC,CAAC;IACxC,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdb,OAAO,CAACa,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;IACrD;EACF,CAAC;EAEH,oBACIrB,OAAA,CAACF,KAAK;IAACwB,OAAO,EAAE,CAAE;IAACC,SAAS,EAAC,KAAK;IAACC,KAAK,EAAE;MAACC,UAAU,EAAE,QAAQ;MAAEC,SAAS,EAAE;IAAM,CAAE;IAAAC,QAAA,gBAClF3B,OAAA,CAACJ,OAAO;MAACgC,OAAO,EAAEvB;IAAkB;MAAAwB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACvChC,OAAA,CAACH,eAAe;MAACM,KAAK,EAAEA;IAAM;MAAA0B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC5B,CAAC;AAEhB,CAAC;AAAC9B,EAAA,CAlCID,UAAU;AAAAgC,EAAA,GAAVhC,UAAU;AAoChB,eAAeA,UAAU;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}