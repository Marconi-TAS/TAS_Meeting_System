{"ast":null,"code":"var _jsxFileName = \"/home/nick/dev/TAS_Meeting_System/frontend/src/components/FileDropdown.jsx\",\n  _s = $RefreshSig$();\n// FileDropdown.js\nimport React, { useState } from 'react';\nimport DropdownItem from './DropdownItem';\nimport Dropdown from './Dropdown';\n//import './FileDropdown.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FileDropdown = () => {\n  _s();\n  const [isOpen, setIsOpen] = useState(false);\n  const handleToggle = () => {\n    setIsOpen(!isOpen);\n  };\n  const handleOptionClick = option => {\n    console.log(`Clicked ${option} option`);\n    // Add your logic for each option here (e.g., open a modal, save the file, etc.)\n    setIsOpen(false); // Close the dropdown after an option is clicked\n  };\n  return /*#__PURE__*/_jsxDEV(Dropdown, {\n    children: [/*#__PURE__*/_jsxDEV(DropdownItem, {\n      value: \"New\",\n      onClick: () => handleOptionClick('New')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DropdownItem, {\n      value: \"Save\",\n      onClick: () => handleOptionClick('Save')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DropdownItem, {\n      value: \"Save As\",\n      onClick: () => handleOptionClick('Save As')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DropdownItem, {\n      value: \"Save All\",\n      onClick: () => handleOptionClick('Save All')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DropdownItem, {\n      value: \"Save and Export Deck As\",\n      onClick: () => handleOptionClick('Save and Export Deck As')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_s(FileDropdown, \"+sus0Lb0ewKHdwiUhiTAJFoFyQ0=\");\n_c = FileDropdown;\nexport default FileDropdown;\nvar _c;\n$RefreshReg$(_c, \"FileDropdown\");","map":{"version":3,"names":["React","useState","DropdownItem","Dropdown","jsxDEV","_jsxDEV","FileDropdown","_s","isOpen","setIsOpen","handleToggle","handleOptionClick","option","console","log","children","value","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/nick/dev/TAS_Meeting_System/frontend/src/components/FileDropdown.jsx"],"sourcesContent":["// FileDropdown.js\nimport React, { useState } from 'react';\nimport DropdownItem from './DropdownItem';\nimport Dropdown from './Dropdown';\n//import './FileDropdown.css';\n\nconst FileDropdown = () => {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const handleToggle = () => {\n    setIsOpen(!isOpen);\n  };\n\n  const handleOptionClick = (option) => {\n    console.log(`Clicked ${option} option`);\n    // Add your logic for each option here (e.g., open a modal, save the file, etc.)\n    setIsOpen(false); // Close the dropdown after an option is clicked\n  };\n\n  return (\n    <Dropdown>\n      <DropdownItem value=\"New\" onClick={() => handleOptionClick('New')} />\n      <DropdownItem value=\"Save\" onClick={() => handleOptionClick('Save')} />\n      <DropdownItem value=\"Save As\" onClick={() => handleOptionClick('Save As')} />\n      <DropdownItem value=\"Save All\" onClick={() => handleOptionClick('Save All')} />\n      <DropdownItem value=\"Save and Export Deck As\" onClick={() => handleOptionClick('Save and Export Deck As')} />\n    </Dropdown>\n  );\n};\n\nexport default FileDropdown;"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,YAAY,MAAM,gBAAgB;AACzC,OAAOC,QAAQ,MAAM,YAAY;AACjC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EAE3C,MAAMS,YAAY,GAAGA,CAAA,KAAM;IACzBD,SAAS,CAAC,CAACD,MAAM,CAAC;EACpB,CAAC;EAED,MAAMG,iBAAiB,GAAIC,MAAM,IAAK;IACpCC,OAAO,CAACC,GAAG,CAAE,WAAUF,MAAO,SAAQ,CAAC;IACvC;IACAH,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC;EACpB,CAAC;EAED,oBACEJ,OAAA,CAACF,QAAQ;IAAAY,QAAA,gBACPV,OAAA,CAACH,YAAY;MAACc,KAAK,EAAC,KAAK;MAACC,OAAO,EAAEA,CAAA,KAAMN,iBAAiB,CAAC,KAAK;IAAE;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACrEhB,OAAA,CAACH,YAAY;MAACc,KAAK,EAAC,MAAM;MAACC,OAAO,EAAEA,CAAA,KAAMN,iBAAiB,CAAC,MAAM;IAAE;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACvEhB,OAAA,CAACH,YAAY;MAACc,KAAK,EAAC,SAAS;MAACC,OAAO,EAAEA,CAAA,KAAMN,iBAAiB,CAAC,SAAS;IAAE;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC7EhB,OAAA,CAACH,YAAY;MAACc,KAAK,EAAC,UAAU;MAACC,OAAO,EAAEA,CAAA,KAAMN,iBAAiB,CAAC,UAAU;IAAE;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC/EhB,OAAA,CAACH,YAAY;MAACc,KAAK,EAAC,yBAAyB;MAACC,OAAO,EAAEA,CAAA,KAAMN,iBAAiB,CAAC,yBAAyB;IAAE;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrG,CAAC;AAEf,CAAC;AAACd,EAAA,CAtBID,YAAY;AAAAgB,EAAA,GAAZhB,YAAY;AAwBlB,eAAeA,YAAY;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}